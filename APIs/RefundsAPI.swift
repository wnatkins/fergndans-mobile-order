//
// RefundsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class RefundsAPI {
    /**
     GetPaymentRefund
     - parameter refundId: (path) Unique ID for the desired &#x60;PaymentRefund&#x60;. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPaymentRefund(refundId: String, completion: @escaping ((_ data: GetPaymentRefundResponse?,_ error: Error?) -> Void)) {
        getPaymentRefundWithRequestBuilder(refundId: refundId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     GetPaymentRefund
     - GET /v2/refunds/{refund_id}
     - Retrieves a specific `Refund` using the `refund_id`.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "refund" : {
    "id" : "O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI",
    "created_at" : "2019-07-06T18:01:22.123Z",
    "updated_at" : "2019-07-06T18:06:03.874Z",
    "status" : "COMPLETED",
    "amount_money" : {
      "amount" : 1000,
      "currency" : "USD"
    },
    "payment_id" : "O2QAAhTYs7rUfzlxT38GMO7LvaB",
    "order_id" : "2duiyoqbfeXY0DBi15GEyk5Epa4F",
    "location_id" : "XK3DBG77NJBFX",
    "processing_fee" : [ {
      "effective_at" : "2019-07-06T20:01:12.000Z",
      "type" : "INITIAL",
      "amount_money" : {
        "amount" : -59,
        "currency" : "USD"
      }
    } ]
  }
}}]
     - parameter refundId: (path) Unique ID for the desired &#x60;PaymentRefund&#x60;. 

     - returns: RequestBuilder<GetPaymentRefundResponse> 
     */
    open class func getPaymentRefundWithRequestBuilder(refundId: String) -> RequestBuilder<GetPaymentRefundResponse> {
        var path = "/v2/refunds/{refund_id}"
        let refundIdPreEscape = "\(refundId)"
        let refundIdPostEscape = refundIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{refund_id}", with: refundIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GetPaymentRefundResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     ListPaymentRefunds
     - parameter beginTime: (query) Timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year. (optional)     - parameter endTime: (query) Timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time. (optional)     - parameter sortOrder: (query) The order in which results are listed. - &#x60;ASC&#x60; - oldest to newest - &#x60;DESC&#x60; - newest to oldest (default). (optional)     - parameter cursor: (query) A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See [Pagination](/basics/api101/pagination) for more information. (optional)     - parameter locationId: (query) ID of location associated with payment. (optional)     - parameter status: (query) If provided, only refunds with the given status are returned.  For a list of refund status values, see [PaymentRefund](#type-paymentrefund).  Default: If omitted refunds are returned regardless of status. (optional)     - parameter sourceType: (query) If provided, only refunds with the given source type are returned.  - &#x60;CARD&#x60; - List refunds only for payments where card was specified as payment  source.  Default: If omitted refunds are returned regardless of source type. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listPaymentRefunds(beginTime: String? = nil, endTime: String? = nil, sortOrder: String? = nil, cursor: String? = nil, locationId: String? = nil, status: String? = nil, sourceType: String? = nil, completion: @escaping ((_ data: ListPaymentRefundsResponse?,_ error: Error?) -> Void)) {
        listPaymentRefundsWithRequestBuilder(beginTime: beginTime, endTime: endTime, sortOrder: sortOrder, cursor: cursor, locationId: locationId, status: status, sourceType: sourceType).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     ListPaymentRefunds
     - GET /v2/refunds
     - Retrieves a list of refunds for the account making the request.  Max results per page: 100
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "refunds" : [ {
    "id" : "O2QAAhTYs7rUfzlxT38GMO7LvaB_q7JwCHtxmgXrh8fAhV468WQ44VxDtL7CU4yVRlsbXmI",
    "created_at" : "2019-07-06T18:01:22.335Z",
    "updated_at" : "2019-07-06T18:06:04.653Z",
    "status" : "COMPLETED",
    "amount_money" : {
      "amount" : 1000,
      "currency" : "USD"
    },
    "payment_id" : "O2QAAhTYs7rUfzlxT38GMO7LvaB",
    "order_id" : "2duiyoqbfeXY0DBi15GEyk5Epa4F",
    "location_id" : "XK3DBG77NJBFX",
    "processing_fee" : [ {
      "effective_at" : "2019-07-06T20:01:12.000Z",
      "type" : "INITIAL",
      "amount_money" : {
        "amount" : -59,
        "currency" : "USD"
      }
    } ]
  }, {
    "id" : "8TDIQvFw8PeDIxhSfd5yyX7GuaB_13px5Vrz01qzzuoGzmjsZIxDjfHhbkm2XppBUX1dW7I",
    "created_at" : "2019-07-06T17:01:54.232Z",
    "updated_at" : "2019-07-06T17:21:04.684Z",
    "status" : "COMPLETED",
    "amount_money" : {
      "amount" : 1000,
      "currency" : "USD"
    },
    "payment_id" : "8TDIQvFw8PeDIxhSfd5yyX7GuaB",
    "order_id" : "w6EXfEwS03oTQsnZTCqfE6f67e4F",
    "processing_fee" : [ {
      "effective_at" : "2019-07-06T19:01:45.000Z",
      "type" : "INITIAL",
      "amount_money" : {
        "amount" : -59,
        "currency" : "USD"
      }
    } ],
    "location_id" : "XK3DBG77NJBFX"
  } ],
  "cursor" : "5evquW1YswHoT4EoyUhzMmTsCnsSXBU9U0WJ4FU4623nrMQcocH0RGU6Up1YkwfiMcF59ood58EBTEGgzMTGHQJpocic7ExOL0NtrTXCeWcv0UJIJNk8eXb"
}}]
     - parameter beginTime: (query) Timestamp for the beginning of the requested reporting period, in RFC 3339 format.  Default: The current time minus one year. (optional)     - parameter endTime: (query) Timestamp for the end of the requested reporting period, in RFC 3339 format.  Default: The current time. (optional)     - parameter sortOrder: (query) The order in which results are listed. - &#x60;ASC&#x60; - oldest to newest - &#x60;DESC&#x60; - newest to oldest (default). (optional)     - parameter cursor: (query) A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See [Pagination](/basics/api101/pagination) for more information. (optional)     - parameter locationId: (query) ID of location associated with payment. (optional)     - parameter status: (query) If provided, only refunds with the given status are returned.  For a list of refund status values, see [PaymentRefund](#type-paymentrefund).  Default: If omitted refunds are returned regardless of status. (optional)     - parameter sourceType: (query) If provided, only refunds with the given source type are returned.  - &#x60;CARD&#x60; - List refunds only for payments where card was specified as payment  source.  Default: If omitted refunds are returned regardless of source type. (optional)

     - returns: RequestBuilder<ListPaymentRefundsResponse> 
     */
    open class func listPaymentRefundsWithRequestBuilder(beginTime: String? = nil, endTime: String? = nil, sortOrder: String? = nil, cursor: String? = nil, locationId: String? = nil, status: String? = nil, sourceType: String? = nil) -> RequestBuilder<ListPaymentRefundsResponse> {
        let path = "/v2/refunds"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "begin_time": beginTime, 
                        "end_time": endTime, 
                        "sort_order": sortOrder, 
                        "cursor": cursor, 
                        "location_id": locationId, 
                        "status": status, 
                        "source_type": sourceType
        ])

        let requestBuilder: RequestBuilder<ListPaymentRefundsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     RefundPayment
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func refundPayment(body: RefundPaymentRequest, completion: @escaping ((_ data: RefundPaymentResponse?,_ error: Error?) -> Void)) {
        refundPaymentWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     RefundPayment
     - POST /v2/refunds
     - Refunds a payment. You can refund the entire payment amount or a  portion of it. For more information, see  [Payments and Refunds Overview](/payments-api/overview).
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "refund" : {
    "id" : "UNOE3kv2BZwqHlJ830RCt5YCuaB_xVteEWVFkXDvKN1ddidfJWipt8p9whmElKT5mZtJ7wZ",
    "status" : "PENDING",
    "amount_money" : {
      "amount" : 100,
      "currency" : "USD"
    },
    "payment_id" : "UNOE3kv2BZwqHlJ830RCt5YCuaB",
    "created_at" : "2018-10-17T20:41:55.520Z",
    "updated_at" : "2018-10-17T20:41:55.520Z"
  }
}}]
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 

     - returns: RequestBuilder<RefundPaymentResponse> 
     */
    open class func refundPaymentWithRequestBuilder(body: RefundPaymentRequest) -> RequestBuilder<RefundPaymentResponse> {
        let path = "/v2/refunds"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<RefundPaymentResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}

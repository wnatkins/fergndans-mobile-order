//
// EmployeesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class EmployeesAPI {
    /**
     ListEmployees
     - parameter locationId: (query) Filter employees returned to only those that are associated with the specified location. (optional)     - parameter status: (query) Specifies the EmployeeStatus to filter the employee by. (optional)     - parameter limit: (query) The number of employees to be returned on each page. (optional)     - parameter cursor: (query) The token required to retrieve the specified page of results. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listEmployees(locationId: String? = nil, status: String? = nil, limit: Int? = nil, cursor: String? = nil, completion: @escaping ((_ data: ListEmployeesResponse?,_ error: Error?) -> Void)) {
        listEmployeesWithRequestBuilder(locationId: locationId, status: status, limit: limit, cursor: cursor).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     ListEmployees
     - GET /v2/employees
     - Gets a list of `Employee` objects for a business.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "cursor" : "cursor",
  "employees" : [ {
    "updated_at" : "updated_at",
    "location_ids" : [ "location_ids", "location_ids" ],
    "last_name" : "last_name",
    "created_at" : "created_at",
    "phone_number" : "phone_number",
    "id" : "id",
    "first_name" : "first_name",
    "email" : "email",
    "status" : "status"
  }, {
    "updated_at" : "updated_at",
    "location_ids" : [ "location_ids", "location_ids" ],
    "last_name" : "last_name",
    "created_at" : "created_at",
    "phone_number" : "phone_number",
    "id" : "id",
    "first_name" : "first_name",
    "email" : "email",
    "status" : "status"
  } ],
  "errors" : [ {
    "code" : "code",
    "field" : "field",
    "detail" : "detail",
    "category" : "category"
  }, {
    "code" : "code",
    "field" : "field",
    "detail" : "detail",
    "category" : "category"
  } ]
}}]
     - parameter locationId: (query) Filter employees returned to only those that are associated with the specified location. (optional)     - parameter status: (query) Specifies the EmployeeStatus to filter the employee by. (optional)     - parameter limit: (query) The number of employees to be returned on each page. (optional)     - parameter cursor: (query) The token required to retrieve the specified page of results. (optional)

     - returns: RequestBuilder<ListEmployeesResponse> 
     */
    open class func listEmployeesWithRequestBuilder(locationId: String? = nil, status: String? = nil, limit: Int? = nil, cursor: String? = nil) -> RequestBuilder<ListEmployeesResponse> {
        let path = "/v2/employees"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "location_id": locationId, 
                        "status": status, 
                        "limit": limit?.encodeToJSON(), 
                        "cursor": cursor
        ])

        let requestBuilder: RequestBuilder<ListEmployeesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     RetrieveEmployee
     - parameter _id: (path) UUID for the employee that was requested. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveEmployee(_id: String, completion: @escaping ((_ data: RetrieveEmployeeResponse?,_ error: Error?) -> Void)) {
        retrieveEmployeeWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     RetrieveEmployee
     - GET /v2/employees/{id}
     - Gets an `Employee` by Square-assigned employee `ID` (UUID)
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "employee" : {
    "updated_at" : "updated_at",
    "location_ids" : [ "location_ids", "location_ids" ],
    "last_name" : "last_name",
    "created_at" : "created_at",
    "phone_number" : "phone_number",
    "id" : "id",
    "first_name" : "first_name",
    "email" : "email",
    "status" : "status"
  },
  "errors" : [ {
    "code" : "code",
    "field" : "field",
    "detail" : "detail",
    "category" : "category"
  }, {
    "code" : "code",
    "field" : "field",
    "detail" : "detail",
    "category" : "category"
  } ]
}}]
     - parameter _id: (path) UUID for the employee that was requested. 

     - returns: RequestBuilder<RetrieveEmployeeResponse> 
     */
    open class func retrieveEmployeeWithRequestBuilder(_id: String) -> RequestBuilder<RetrieveEmployeeResponse> {
        var path = "/v2/employees/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<RetrieveEmployeeResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}

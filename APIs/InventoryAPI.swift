//
// InventoryAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class InventoryAPI {
    /**
     BatchChangeInventory
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func batchChangeInventory(body: BatchChangeInventoryRequest, completion: @escaping ((_ data: BatchChangeInventoryResponse?,_ error: Error?) -> Void)) {
        batchChangeInventoryWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     BatchChangeInventory
     - POST /v2/inventory/batch-change
     - Applies adjustments and counts to the provided item quantities.  On success: returns the current calculated counts for all objects referenced in the request. On failure: returns a list of related errors.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "errors" : [ ],
  "counts" : [ {
    "catalog_object_id" : "W62UWFY35CWMYGVWK6TWJDNI",
    "catalog_object_type" : "ITEM_VARIATION",
    "state" : "IN_STOCK",
    "location_id" : "C6W5YS5QM06F5",
    "quantity" : "53",
    "calculated_at" : "2016-11-16T22:28:01.223Z"
  } ]
}}]
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 

     - returns: RequestBuilder<BatchChangeInventoryResponse> 
     */
    open class func batchChangeInventoryWithRequestBuilder(body: BatchChangeInventoryRequest) -> RequestBuilder<BatchChangeInventoryResponse> {
        let path = "/v2/inventory/batch-change"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BatchChangeInventoryResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     BatchRetrieveInventoryChanges
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func batchRetrieveInventoryChanges(body: BatchRetrieveInventoryChangesRequest, completion: @escaping ((_ data: BatchRetrieveInventoryChangesResponse?,_ error: Error?) -> Void)) {
        batchRetrieveInventoryChangesWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     BatchRetrieveInventoryChanges
     - POST /v2/inventory/batch-retrieve-changes
     - Returns historical physical counts and adjustments based on the provided filter criteria.  Results are paginated and sorted in ascending order according their `occurred_at` timestamp (oldest first).  BatchRetrieveInventoryChanges is a catch-all query endpoint for queries that cannot be handled by other, simpler endpoints.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "errors" : [ ],
  "changes" : [ {
    "type" : "PHYSICAL_COUNT",
    "physical_count" : {
      "id" : "46YDTW253DWGGK9HMAE6XCAO",
      "reference_id" : "22c07cf4-5626-4224-89f9-691112019399",
      "catalog_object_id" : "W62UWFY35CWMYGVWK6TWJDNI",
      "catalog_object_type" : "ITEM_VARIATION",
      "state" : "IN_STOCK",
      "location_id" : "C6W5YS5QM06F5",
      "quantity" : "86",
      "source" : {
        "product" : "SQUARE_POS",
        "application_id" : "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
        "name" : "Square Point of Sale 4.37"
      },
      "employee_id" : "LRK57NSQ5X7PUD05",
      "occurred_at" : "2016-11-16T22:24:49.028Z",
      "created_at" : "2016-11-16T22:25:24.878Z"
    }
  } ]
}}]
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 

     - returns: RequestBuilder<BatchRetrieveInventoryChangesResponse> 
     */
    open class func batchRetrieveInventoryChangesWithRequestBuilder(body: BatchRetrieveInventoryChangesRequest) -> RequestBuilder<BatchRetrieveInventoryChangesResponse> {
        let path = "/v2/inventory/batch-retrieve-changes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BatchRetrieveInventoryChangesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     BatchRetrieveInventoryCounts
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func batchRetrieveInventoryCounts(body: BatchRetrieveInventoryCountsRequest, completion: @escaping ((_ data: BatchRetrieveInventoryCountsResponse?,_ error: Error?) -> Void)) {
        batchRetrieveInventoryCountsWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     BatchRetrieveInventoryCounts
     - POST /v2/inventory/batch-retrieve-counts
     - Returns current counts for the provided [CatalogObject](#type-catalogobject)s at the requested [Location](#type-location)s.  Results are paginated and sorted in descending order according to their `calculated_at` timestamp (newest first).  When `updated_after` is specified, only counts that have changed since that time (based on the server timestamp for the most recent change) are returned. This allows clients to perform a \"sync\" operation, for example in response to receiving a Webhook notification.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "errors" : [ ],
  "counts" : [ {
    "catalog_object_id" : "W62UWFY35CWMYGVWK6TWJDNI",
    "catalog_object_type" : "ITEM_VARIATION",
    "state" : "IN_STOCK",
    "location_id" : "59TNP9SA8VGDA",
    "quantity" : "79",
    "calculated_at" : "2016-11-16T22:28:01.223Z"
  } ]
}}]
     - parameter body: (body) An object containing the fields to POST for the request.

See the corresponding object definition for field details. 

     - returns: RequestBuilder<BatchRetrieveInventoryCountsResponse> 
     */
    open class func batchRetrieveInventoryCountsWithRequestBuilder(body: BatchRetrieveInventoryCountsRequest) -> RequestBuilder<BatchRetrieveInventoryCountsResponse> {
        let path = "/v2/inventory/batch-retrieve-counts"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<BatchRetrieveInventoryCountsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     RetrieveInventoryAdjustment
     - parameter adjustmentId: (path) ID of the [InventoryAdjustment](#type-inventoryadjustment) to retrieve. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveInventoryAdjustment(adjustmentId: String, completion: @escaping ((_ data: RetrieveInventoryAdjustmentResponse?,_ error: Error?) -> Void)) {
        retrieveInventoryAdjustmentWithRequestBuilder(adjustmentId: adjustmentId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     RetrieveInventoryAdjustment
     - GET /v2/inventory/adjustment/{adjustment_id}
     - Returns the [InventoryAdjustment](#type-inventoryadjustment) object with the provided `adjustment_id`.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "errors" : [ ],
  "adjustment" : {
    "id" : "UDMOEO78BG6GYWA2XDRYX3KB",
    "reference_id" : "4a366069-4096-47a2-99a5-0084ac879509",
    "from_state" : "IN_STOCK",
    "to_state" : "SOLD",
    "location_id" : "C6W5YS5QM06F5",
    "catalog_object_id" : "W62UWFY35CWMYGVWK6TWJDNI",
    "catalog_object_type" : "ITEM_VARIATION",
    "quantity" : "7",
    "total_price_money" : {
      "amount" : 4550,
      "currency" : "USD"
    },
    "occurred_at" : "2016-11-16T25:44:22.837Z",
    "created_at" : "2016-11-17T13:02:15.142Z",
    "source" : {
      "product" : "SQUARE_POS",
      "application_id" : "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
      "name" : "Square Point of Sale 4.37"
    },
    "employee_id" : "LRK57NSQ5X7PUD05"
  }
}}]
     - parameter adjustmentId: (path) ID of the [InventoryAdjustment](#type-inventoryadjustment) to retrieve. 

     - returns: RequestBuilder<RetrieveInventoryAdjustmentResponse> 
     */
    open class func retrieveInventoryAdjustmentWithRequestBuilder(adjustmentId: String) -> RequestBuilder<RetrieveInventoryAdjustmentResponse> {
        var path = "/v2/inventory/adjustment/{adjustment_id}"
        let adjustmentIdPreEscape = "\(adjustmentId)"
        let adjustmentIdPostEscape = adjustmentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{adjustment_id}", with: adjustmentIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<RetrieveInventoryAdjustmentResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     RetrieveInventoryChanges
     - parameter catalogObjectId: (path) ID of the [CatalogObject](#type-catalogobject) to retrieve.      - parameter locationIds: (query) The [Location](#type-location) IDs to look up as a comma-separated list. An empty list queries all locations. (optional)     - parameter cursor: (query) A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See [Pagination](/basics/api101/pagination) for more information. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveInventoryChanges(catalogObjectId: String, locationIds: String? = nil, cursor: String? = nil, completion: @escaping ((_ data: RetrieveInventoryChangesResponse?,_ error: Error?) -> Void)) {
        retrieveInventoryChangesWithRequestBuilder(catalogObjectId: catalogObjectId, locationIds: locationIds, cursor: cursor).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     RetrieveInventoryChanges
     - GET /v2/inventory/{catalog_object_id}/changes
     - Returns a set of physical counts and inventory adjustments for the provided [CatalogObject](#type-catalogobject) at the requested [Location](#type-location)s.  Results are paginated and sorted in descending order according to their `occurred_at` timestamp (newest first).  There are no limits on how far back the caller can page. This endpoint is useful when displaying recent changes for a specific item. For more sophisticated queries, use a batch endpoint.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "errors" : [ ],
  "changes" : [ {
    "type" : "ADJUSTMENT",
    "adjustment" : {
      "id" : "OJKJIUANKLMLQANZADNPLKAD",
      "reference_id" : "d8207693-168f-4b44-a2fd-a7ff533ddd26",
      "from_state" : "IN_STOCK",
      "to_state" : "SOLD",
      "location_id" : "C6W5YS5QM06F5",
      "catalog_object_id" : "W62UWFY35CWMYGVWK6TWJDNI",
      "catalog_object_type" : "ITEM_VARIATION",
      "quantity" : "3",
      "total_price_money" : {
        "amount" : 5000,
        "currency" : "USD"
      },
      "occurred_at" : "2016-11-16T22:25:24.878Z",
      "created_at" : "2016-11-16T22:25:24.878Z",
      "source" : {
        "product" : "SQUARE_POS",
        "application_id" : "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
        "name" : "Square Point of Sale 4.37"
      },
      "employee_id" : "AV7YRCGI2H1J5NQ8E1XIZCNA",
      "transaction_id" : "5APV6JYK1SNCZD11AND2RX1Z"
    }
  } ]
}}]
     - parameter catalogObjectId: (path) ID of the [CatalogObject](#type-catalogobject) to retrieve.      - parameter locationIds: (query) The [Location](#type-location) IDs to look up as a comma-separated list. An empty list queries all locations. (optional)     - parameter cursor: (query) A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See [Pagination](/basics/api101/pagination) for more information. (optional)

     - returns: RequestBuilder<RetrieveInventoryChangesResponse> 
     */
    open class func retrieveInventoryChangesWithRequestBuilder(catalogObjectId: String, locationIds: String? = nil, cursor: String? = nil) -> RequestBuilder<RetrieveInventoryChangesResponse> {
        var path = "/v2/inventory/{catalog_object_id}/changes"
        let catalogObjectIdPreEscape = "\(catalogObjectId)"
        let catalogObjectIdPostEscape = catalogObjectIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{catalog_object_id}", with: catalogObjectIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "location_ids": locationIds, 
                        "cursor": cursor
        ])

        let requestBuilder: RequestBuilder<RetrieveInventoryChangesResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     RetrieveInventoryCount
     - parameter catalogObjectId: (path) ID of the [CatalogObject](#type-catalogobject) to retrieve.      - parameter locationIds: (query) The [Location](#type-location) IDs to look up as a comma-separated list. An empty list queries all locations. (optional)     - parameter cursor: (query) A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See [Pagination](/basics/api101/pagination) for more information. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveInventoryCount(catalogObjectId: String, locationIds: String? = nil, cursor: String? = nil, completion: @escaping ((_ data: RetrieveInventoryCountResponse?,_ error: Error?) -> Void)) {
        retrieveInventoryCountWithRequestBuilder(catalogObjectId: catalogObjectId, locationIds: locationIds, cursor: cursor).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     RetrieveInventoryCount
     - GET /v2/inventory/{catalog_object_id}
     - Retrieves the current calculated stock count for a given [CatalogObject](#type-catalogobject) at a given set of [Location](#type-location)s. Responses are paginated and unsorted. For more sophisticated queries, use a batch endpoint.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "errors" : [ ],
  "counts" : [ {
    "catalog_object_id" : "W62UWFY35CWMYGVWK6TWJDNI",
    "catalog_object_type" : "ITEM_VARIATION",
    "state" : "IN_STOCK",
    "location_id" : "C6W5YS5QM06F5",
    "quantity" : "22",
    "calculated_at" : "2016-11-16T22:28:01.223Z"
  } ]
}}]
     - parameter catalogObjectId: (path) ID of the [CatalogObject](#type-catalogobject) to retrieve.      - parameter locationIds: (query) The [Location](#type-location) IDs to look up as a comma-separated list. An empty list queries all locations. (optional)     - parameter cursor: (query) A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for the original query.  See [Pagination](/basics/api101/pagination) for more information. (optional)

     - returns: RequestBuilder<RetrieveInventoryCountResponse> 
     */
    open class func retrieveInventoryCountWithRequestBuilder(catalogObjectId: String, locationIds: String? = nil, cursor: String? = nil) -> RequestBuilder<RetrieveInventoryCountResponse> {
        var path = "/v2/inventory/{catalog_object_id}"
        let catalogObjectIdPreEscape = "\(catalogObjectId)"
        let catalogObjectIdPostEscape = catalogObjectIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{catalog_object_id}", with: catalogObjectIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "location_ids": locationIds, 
                        "cursor": cursor
        ])

        let requestBuilder: RequestBuilder<RetrieveInventoryCountResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     RetrieveInventoryPhysicalCount
     - parameter physicalCountId: (path) ID of the [InventoryPhysicalCount](#type-inventoryphysicalcount) to retrieve. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func retrieveInventoryPhysicalCount(physicalCountId: String, completion: @escaping ((_ data: RetrieveInventoryPhysicalCountResponse?,_ error: Error?) -> Void)) {
        retrieveInventoryPhysicalCountWithRequestBuilder(physicalCountId: physicalCountId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     RetrieveInventoryPhysicalCount
     - GET /v2/inventory/physical-count/{physical_count_id}
     - Returns the [InventoryPhysicalCount](#type-inventoryphysicalcount) object with the provided `physical_count_id`.
     - OAuth:
       - type: oauth2
       - name: oauth2
     - examples: [{contentType=application/json, example={
  "errors" : [ ],
  "count" : {
    "id" : "ANZADNPLKADOJKJIUANKLMLQ",
    "reference_id" : "f857ec37-f9a0-4458-8e23-5b5e0bea4e53",
    "catalog_object_id" : "W62UWFY35CWMYGVWK6TWJDNI",
    "catalog_object_type" : "ITEM_VARIATION",
    "state" : "IN_STOCK",
    "location_id" : "C6W5YS5QM06F5",
    "quantity" : "15",
    "source" : {
      "product" : "SQUARE_POS",
      "application_id" : "416ff29c-86c4-4feb-b58c-9705f21f3ea0",
      "name" : "Square Point of Sale 4.37"
    },
    "employee_id" : "LRK57NSQ5X7PUD05",
    "occurred_at" : "2016-11-16T22:25:24.878Z",
    "created_at" : "2016-11-16T22:25:24.878Z"
  }
}}]
     - parameter physicalCountId: (path) ID of the [InventoryPhysicalCount](#type-inventoryphysicalcount) to retrieve. 

     - returns: RequestBuilder<RetrieveInventoryPhysicalCountResponse> 
     */
    open class func retrieveInventoryPhysicalCountWithRequestBuilder(physicalCountId: String) -> RequestBuilder<RetrieveInventoryPhysicalCountResponse> {
        var path = "/v2/inventory/physical-count/{physical_count_id}"
        let physicalCountIdPreEscape = "\(physicalCountId)"
        let physicalCountIdPostEscape = physicalCountIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{physical_count_id}", with: physicalCountIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<RetrieveInventoryPhysicalCountResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
